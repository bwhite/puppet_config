from __future__ import absolute_import

from mock import Mock, patch

from celery import current_app as app, group, task, chord
from celery.app import builtins
from celery._state import _task_stack
from celery.tests.utils import Case


@task()
def add(x, y):
    return x + y


@task()
def xsum(x):
    return sum(x)


class test_backend_cleanup(Case):

    def test_run(self):
        prev = app.backend
        app.backend.cleanup = Mock()
        app.backend.cleanup.__name__ = 'cleanup'
        try:
            cleanup_task = builtins.add_backend_cleanup_task(app)
            cleanup_task()
            self.assertTrue(app.backend.cleanup.called)
        finally:
            app.backend = prev


class test_map(Case):

    def test_run(self):

        @app.task()
        def map_mul(x):
            return x[0] * x[1]

        res = app.tasks['celery.map'](map_mul, [(2, 2), (4, 4), (8, 8)])
        self.assertEqual(res, [4, 16, 64])


class test_starmap(Case):

    def test_run(self):

        @app.task()
        def sm